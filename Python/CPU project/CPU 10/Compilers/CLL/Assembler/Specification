// code to take assembly language, assemble it into AIF (assembler intermediate form) and then render that form into memory and execute it


///////////////////////////////////////////////////////////////////////////////
//Loader section
// Assembly reduced to intermediate tree form, which is now loaded into memory and offsets added



// structure of the tree is a linked list of line objects
//line objects have 4 fields:
//	- Address 			- address of line - the offset is added to this and the contents of the line is stored into memory at that points
//	- Line link 		- pointer to rest of the line (a one or two int section containing the data of the line)
//	- next link 		- pointer to the next line, if zero then termiate loading and execute
//	- apply offset 		- if true then the offset is also added to the specific field of the intruction (or data)
//  - type				- type of line:
// 							- 0: error
//							- 1: instruction
//							- 2: data - int
//							- 3: data - byte  -ignoring words in this