int check_if_equal(@char word1, @char word2, int len)
	int i;
	for(i = 0, i<len,i = i + 1)
		if (not(word1[i] == word2[i])) then
			return 0;
		endif;
	loop;
	return 1;
end;

void int_to_string(int number, @char string_buffer)
	@char lookup = "0123456789";
	int i;
	int reduced;
	@char 10 digit_stack;
	int digit_stack_pointer = 0;
	for(number = number, number>0,number = number/10)  //utilising for loop functionality to reduce number
		reduced = number/10;
		digit_stack[digit_stack_pointer] = reduced; //puts decimal digits into stack
		digit_stack_pointer = digit_stack_pointer + 1;
	loop;

	while (digit_stack_pointer >0) do
		digit_stack_pointer = digit_stack_pointer-1;
		string_buffer[i] = lookup[digit_stack[digit_stack_pointer]];
		i = i + 1;
	loop;
end;

int string_to_int(@char number)
	int dec = 0;
	int i;
	for(i=0, number[i] ,i = i+1)
		dec = dec * 10 + ( number[i] - '0' );
	loop;
	return dec;
end;


void print_hex(@char string, int size)


	@char lookup = "0123456789ABCDEF"; //prints the hex of a string 
	@char 3 buf = [0,0,0];
	int i;
	char high;
	char low;


	for (i = 0, i<size, i = i + 1)
		high = string[i]>>4;
		low = string[i]&15;
		buf[0] = lookup[high];
		buf[1] = lookup[low];
		printf(buf);
	loop;
end;