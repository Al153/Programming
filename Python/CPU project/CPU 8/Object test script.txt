#====================== Pseudocode =======================
#OO.init(5)
#print 1

#Stack.init(10,Stack1)
#print addr(Stack1)
#print 2 

#Stack.init(5, Stack2)
#print addr(Stack2)
#print 3

#Stack.Push(Stack2, 5)
#print addr(Stack2)
#print 4

#Stack.Push(Stack2, 6)
#print addr(Stack2)
#print 5

#Stack.del(Stack1)
#print addr(Stack1)
#print 6

#acc = Stack.pop(stack2)
#print addr(stack2)
#========================== Assembly =======================
def stack1 1
def stack2 2


LOD gp0 5 @ldd

GTO %OO.init @gd @str
OUT 1 @ov @od #OUT statements are for debugging
OUT $$ @od

LOD gp0 10 @ldd
LOD gp1 stack1 @ldd
GTO %Stack.init @gd @str
OUT 2 @ov @od
OUT $$ @od

LOD gp0 5 @ldd
LOD gp1 stack2 @ldd
GTO %Stack.init @gd @str
OUT 3 @ov @od
OUT $$ @od

LOD gp0 stack2 @ldd
LOD gp1 5 @ldd
GTO %Stack.push @gd @str
OUT 4 @ov @od
OUT $$ @od

LOD gp0 stack2 @ldd
LOD gp1 6 @ldd
GTO %Stack.push @gd @str
OUT 5 @ov @od
OUT $$ @od

LOD gp0 stack1 @ldd
GTO %Stack.del @gd @str
OUT 6 @ov @od
OUT $$ @od

LOD gp0 stack2 @ldd
GTO %Stack.pop @gd @str
OUT 6 @ov @od
OUT $$ @od

MOV acc gp0
HLT

import Stack:all
import OO:all

%end data 0

