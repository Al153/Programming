{"lookahead_action_table": {"0": {"PROGRAM": ["shift", 1]}, "1": {"END": ["reduce", 79]}}, "rules": [["stmnt", ["assignment"], 0], ["stmnt", ["cntrl_flow"], 1], ["stmnt", ["var_dec"], 2], ["stmnt", ["fun_dec"], 3], ["stmnt", ["other"], 4], ["type_cast", ["type", "\"(\"", "expr", "\")\""], 5], ["fun_call", ["id", "\"(\"", "args", "\")\""], 6], ["fun_call", ["id", "\"(\"", "\")\""], 7], ["PROGRAM", ["block"], 8], ["if_stmnt", ["\"if\"", "bool_expr", "\"then\"", "block", "\"endif\""], 9], ["if_stmnt", ["\"if\"", "bool_expr", "\"then\"", "block", "\"else\"", "block", "\"endif\""], 10], ["unary_op", ["\"~\""], 11], ["unary_op", ["\"-\""], 12], ["array", ["array", "\",\"", "num"], 13], ["array", ["num"], 14], ["ternary_op", ["expr", "\"if\"", "for_bool_expr", "\"else\"", "expr"], 15], ["cntrl_flow", ["if_stmnt"], 16], ["cntrl_flow", ["while_loop"], 17], ["cntrl_flow", ["for_loop"], 18], ["comp_op", ["\"!\"", "\"=\""], 19], ["comp_op", ["\"=\"", "\"=\""], 20], ["comp_op", ["\"<\""], 21], ["comp_op", ["\">\""], 22], ["comp_op", ["not_less"], 23], ["comp_op", ["not_greater"], 24], ["const", ["num"], 25], ["const", ["\"@\"", "id"], 26], ["var_dec", ["type", "id"], 27], ["var_dec", ["type", "id", "\"=\"", "var_value"], 28], ["other", ["\"return\"", "expr"], 29], ["other", ["\"return\""], 30], ["other", ["fun_call"], 31], ["other", ["\"break\""], 32], ["other", ["\"continue\""], 33], ["other", ["\"pass\""], 34], ["factor", ["const"], 35], ["factor", ["variable"], 36], ["factor", ["fun_call"], 37], ["factor", ["\"(\"", "expr", "\")\""], 38], ["factor", ["type_cast"], 39], ["not_less", ["\">\"", "\"=\""], 40], ["not_less", ["\"=\"", "\">\""], 41], ["type", ["\"int\""], 42], ["type", ["\"char\""], 43], ["type", ["\"@\"", "\"int\""], 44], ["type", ["\"@\"", "\"int\"", "num"], 45], ["type", ["\"@\"", "\"char\""], 46], ["type", ["\"@\"", "\"char\"", "num"], 47], ["type", ["\"void\""], 48], ["addop", ["\"+\""], 49], ["addop", ["\"-\""], 50], ["addop", ["\">\"", "\">\""], 51], ["addop", ["\"<\"", "\"<\""], 52], ["for_loop", ["\"for\"", "\"(\"", "assignment", "\",\"", "for_bool_expr", "\",\"", "assignment", "\")\"", "block", "\"loop\""], 53], ["args", ["args", "\",\"", "expr"], 54], ["args", ["expr"], 55], ["while_loop", ["\"while\"", "bool_expr", "\"do\"", "block", "\"loop\""], 56], ["comparison", ["expr", "comp_op", "expr"], 57], ["comparison", ["expr"], 58], ["var_value", ["\"[\"", "array", "\"]\""], 59], ["var_value", ["expr"], 60], ["assignment", ["variable", "\"=\"", "expr"], 61], ["assignment", ["variable", "modify_op", "\"=\"", "expr"], 62], ["bool_expr", ["\"(\"", "bool_factor", "\")\""], 63], ["bool_expr", ["\"(\"", "comparison", "\")\""], 64], ["bool_factor", ["bool_expr"], 65], ["bool_factor", ["bool_factor", "boolop", "bool_expr"], 66], ["bool_factor", ["unary_boolop", "bool_expr"], 67], ["boolop", ["\"and\""], 68], ["boolop", ["\"or\""], 69], ["boolop", ["\"xor\""], 70], ["variable", ["id"], 71], ["variable", ["id", "\"[\"", "expr", "\"]\""], 72], ["line", ["stmnt", "\";\""], 73], ["for_bool_expr", ["bool_factor"], 74], ["for_bool_expr", ["comparison"], 75], ["unary_boolop", ["\"not\""], 76], ["term", ["term", "mulop", "factor"], 77], ["term", ["factor"], 78], ["GOAL", ["PROGRAM"], 79], ["inargs", ["type", "id"], 80], ["inargs", ["inargs", "\",\"", "type", "id"], 81], ["fun_dec", ["type", "id", "\"(\"", "inargs", "\")\"", "block", "\"end\""], 82], ["fun_dec", ["type", "id", "\"(\"", "\")\"", "block", "\"end\""], 83], ["not_greater", ["\"<\"", "\"=\""], 84], ["not_greater", ["\"=\"", "\"<\""], 85], ["mulop", ["\"*\""], 86], ["mulop", ["\"/\""], 87], ["mulop", ["\"%\""], 88], ["mulop", ["\"^\""], 89], ["mulop", ["\"|\""], 90], ["mulop", ["\"&\""], 91], ["expr", ["expr", "addop", "term"], 92], ["expr", ["unary_op", "term"], 93], ["expr", ["term"], 94], ["expr", ["ternary_op"], 95], ["modify_op", ["addop"], 96], ["modify_op", ["mulop"], 97], ["block", ["line"], 98], ["block", ["block", "line"], 99]], "goto_table": {"0": {}, "1": {}}, "terminals": ["assignment", "cntrl_flow", "var_dec", "fun_dec", "other", "type", "\"(\"", "expr", "\")\"", "id", "args", "block", "\"if\"", "bool_expr", "\"then\"", "\"endif\"", "\"else\"", "\"~\"", "\"-\"", "array", "\",\"", "num", "for_bool_expr", "if_stmnt", "while_loop", "for_loop", "\"!\"", "\"=\"", "\"<\"", "\">\"", "not_less", "not_greater", "\"@\"", "var_value", "\"return\"", "fun_call", "\"break\"", "\"continue\"", "\"pass\"", "const", "variable", "type_cast", "\"int\"", "\"char\"", "\"void\"", "\"+\"", "\"for\"", "\"loop\"", "\"while\"", "\"do\"", "comp_op", "\"[\"", "\"]\"", "modify_op", "bool_factor", "comparison", "boolop", "unary_boolop", "\"and\"", "\"or\"", "\"xor\"", "stmnt", "\";\"", "\"not\"", "term", "mulop", "factor", "PROGRAM", "inargs", "\"end\"", "\"*\"", "\"/\"", "\"%\"", "\"^\"", "\"|\"", "\"&\"", "addop", "unary_op", "ternary_op", "line"], "to_ignore": [" ", "\t", "\n"], "elementary_tokens": [" ", "\t", "\n", "(", ")", "@", "$", "+", "-", "*", "/", "%", "|", "^", "&", "~", "<", "=", ">", ";", ",", "[", "]", "!"]}