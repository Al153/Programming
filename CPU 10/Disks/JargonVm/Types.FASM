.( SETTING UP Type definitions.\n)
	BYTECODE ->
		0 INT TypeLim // This stores the type limit (4 + max header)
		MaxTypes INT[] TYPELENS EXPORT // Stores the lengths of each type
		MaxTypes INT[] TYPEOFFS EXPORT // Stores the index into each Type's objects where the values to search are (where the metadata stops)
	;;
	.( DEFINED VARS\n)

	VARIABLE lim
	: CLSR_LIM lim @ ;  //  ( -- lim ) highest value for a closure
	VARIABLE TYPCNT 0 TYPCNT !
	
	BYTECODE ->
		: SET_LIM  TYPCNT lim ! ; // ( lim -- ) set the closure lim

		: TYPE // ( length, offset -- ), [in: name -- ] register a new type
			CELLS SWAP CELLS SWAP TYPCNT @ // multiply length and offset by cells for  use by assembler code
			DUPBACK TYPEOFFS + !
			DUPBACK TYPELENS + !
		CONST 
		TYPCNT 1 CELLS += ;
	;;

.( DEFINED TYPE\n)

	// insert all closure types
	// x y TYPE t_1c
	// .
	// .
	// .
	// x y TYPE t_nc
	// SET_LIM 				// end of closures
	// 2 1 TYPE t_ref
	// 3 2 TYPE t_sum
	// 3 1 TYPE t_pair
 
// Default type formats:

	// n_closure:
		// Header = 4*n
		// jump address
		//   .
		//   .
		//   n values
		//   .

	// Pair:
		// Pair_header
		// First Value
		// SecondValue

	// Sum:
		// Sum_header
		// Inr/Inl marker
		// value
	
	// Ref
		// ref header
		// value

// compile time number of types of object * 4 and store to TypeLim